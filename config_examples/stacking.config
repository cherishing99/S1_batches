# Config file for Stacking methods
#############################################
# Python configparser module section header 
[py-config]

# satellite options: S1
# You can provide multiple swaths at once (will do that later)
satellite = S1
wavelength = 56
swath = 2

# stage0: setup
# stage1: corrections for atmosphere and errors etc.
# stage2: make referenced_unwrap.grd in a directory
# stage3: velocity and time series formation
# stage4: geocode
startstage = 3
endstage  =  3

# Reference pixel (lon/lat, and/or row/col)
# You can hard code the swath and idx if you want to save the value from a previous run. 
ref_loc = -116.572/35.321
ref_swath = 1
ref_idx = 748/321

# timeseries options: STACK or NSBAS or SBAS 
# output directory for timeseries information
# Make sure the other dirs are within ts_parent_dir
ts_type = NSBAS
ts_parent_dir = stacking
ref_dir = stacking/ref_unwrapped
ts_output_dir = stacking/nsbas_feb20

# sbas parameters
sbas_smoothing = 20.0

# nsbas parameters: minimum % of good igrams for nsbas, or -1 for full-rank pixels only
nsbas_min_intfs = 50

# Do you want to choose a subset of your images to generate a time series?  # Format: YYYYMMDD ( not implemented yet )
# Timespan is the duration of an interferogram you want to form (all, long, short, etc.) in years
start_time = 20170514
end_time = 20190704
intf_timespan = 0

# choose which interferograms to skip (bad intfs)
skip_file = manual_remove.txt

# Choose points to reverse-geocode and get their velocities and time series
ts_points_file = coso_points.txt

#de-trending options, including GPS velocity file, optional to be used for de-trending
detrend = False
trendparams = 3
gps_file =
flight_angle = 194
look_angle = 30

# Options for fancy corrections: reference pixel, phase unwrapping errors, and atmospheric corrections
solve_unwrap_errors = 0
gacos = 0
aps = 0
detrend_atm_topo = 0


